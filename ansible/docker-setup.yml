---
- name: Install Docker and Docker Compose on Ubuntu
  hosts: all
  become: yes
  vars:
    docker_compose_version: "2.21.0"
  
  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Update apt package index after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        groups: docker
        append: yes

    - name: Download Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create symbolic link for docker-compose
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: docker_compose_version_output
      changed_when: false

    - name: Display Docker version
      debug:
        msg: "{{ docker_version.stdout }}"

    - name: Display Docker Compose version
      debug:
        msg: "{{ docker_compose_version_output.stdout }}"

    - name: Test Docker installation with hello-world
      command: docker run --rm hello-world
      become: yes
      register: docker_test_result
      changed_when: false

    - name: Display Docker test result
      debug:
        msg: "Docker installation successful!"

    - name: Ensure Docker socket permissions are correct
      file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        mode: '0660'

    - name: Create docker group if it doesn't exist
      group:
        name: docker
        state: present

    - name: Ensure vagrant user is properly added to docker group
      user:
        name: vagrant
        groups: docker
        append: yes

    - name: Set proper permissions for Docker daemon
      systemd:
        name: docker
        state: restarted
        enabled: yes

    - name: Wait for Docker to be ready
      wait_for:
        port: 2375
        host: localhost
        timeout: 30
      ignore_errors: yes

    - name: Final Docker setup - ensure everything is working
      shell: |
        # Restart Docker to ensure all permissions are applied
        systemctl restart docker
        sleep 5
        # Test Docker works with root
        docker run --rm hello-world
        # Set up proper group permissions
        chgrp docker /var/run/docker.sock
        chmod g+rw /var/run/docker.sock
      become: yes
      register: final_docker_setup
      changed_when: false

    - name: Copy project files to /home/vagrant/blog-apps
      synchronize:
        src: /vagrant/
        dest: /home/vagrant/blog-apps/
        delete: yes
        recursive: yes
      become_user: vagrant

    - name: Set ownership of project files
      file:
        path: /home/vagrant/blog-apps
        owner: vagrant
        group: vagrant
        recurse: yes
